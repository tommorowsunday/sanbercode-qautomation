{"version":3,"sources":["app/logo.js","app/hero.js","app/parse.js","app/parse-all.js","app/toggle.js","app/properties-options.js","app/reducer.js","app/suite.js","app/suite-options.js","app/test-options.js","app/error.js","app/loading.js","app/app.js","index.js","cli/parse.js"],"names":["Logo","className","width","height","viewBox","fill","xmlns","d","fillRule","clipRule","FilterIcon","Hero","active","onClick","title","brand","alt","src","require","parse","window","dispatch","files","suites","a","file","contents","parsed","Object","keys","length","type","payload","error","merge","recursive","message","Toggle","onIcon","offIcon","onLabel","offLabel","disabled","onChange","Search","label","evt","value","target","placeholder","Total","count","total","EyeIcon","EyeSlashIcon","ChevronUpIcon","ChevronDownIcon","ToggleRow","propertiesVisible","propertiesExpanded","PropertiesOptions","all","tests","toggleAllProperties","state","update","toggleType","suiteTesttoggleType","values","currentSuites","forEach","suite","properties","test","errors","push","name","id","fuzzy","toLowerCase","suitesExpanded","some","messages","visible","raw","entries","filter","key","concat","_active","_visible","suitesEmpty","menuActive","suiteOptionsActive","testOptionsActive","propertiesOptionsActive","activeFiles","testToggles","status","passed","failure","skipped","unknown","expanded","prop","icons","statusRank","Properties","map","join","RawContent","index","PrettyContent","dangerouslySetInnerHTML","__html","PrettyIcon","CodeIcon","Test","time","classname","hasProperties","hasMessage","aria-hidden","SuiteCount","Suite","systemOut","hasTests","containsSomething","sort","left","right","leftStatus","indexOf","rightStatus","leftName","rightName","HideIcon","ShowIcon","SuiteOptions","icon","fromTestCounts","testCounts","StatusTotal","Options","Error","href","rel","Loading","App","useReducer","reducer","initialState","useEffect","parseAll","currentPropertiesCount","propertiesTotal","testCount","testTotal","onUpdate","sockets","io","on","LZUTF8","decompress","inputEncoding","ReactDOM","render","document","getElementById","xml2js","parseString","xml","Promise","resolve","reject","err","result","hashCode","str","hash","i","charCodeAt","extractProperties","property","trim","meta","$","_","extractTests","output","testcases","testcase","class","clonedMeta","assign","body","is_","is$Message","is$Type","isString","extractTestMessages","testsuite","extractSuite","testsuites","Array","isArray","includes","extarctSuiteMeta","extractSystemOut","extract","module","exports"],"mappings":"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","file":"static/js/main.ec6aaac8.chunk.js","sourcesContent":["import React from 'react'\n\nconst Logo = () => <svg className='logo' width='64' height='64' viewBox='0 0 64 64' fill='none' xmlns='http://www.w3.org/2000/svg'>\n  <rect width='64' height='64' fill='#2C3E50' />\n  <path d='M19.0625 28.9688L24.5156 20.25H28.0469L20.8594 31.5312L28.2188 43H24.6562L19.0625 34.125L13.4375 43H9.89062L17.2656 31.5312L10.0625 20.25H13.5781L19.0625 28.9688Z' fill='#0DBF1F' />\n  <path d='M42.4344 39.0156L48.9344 20.25H52.2156L43.7781 43H41.1219L32.7 20.25H35.9656L42.4344 39.0156Z' fill='#B32010' />\n  <path fillRule='evenodd' clipRule='evenodd' d='M0 64L4 60V4H60L64 0H4H0V4V64Z' fill='#0DBF1F' />\n  <path fillRule='evenodd' clipRule='evenodd' d='M0 64H60H64V60V0L60 4V60H4L0 64Z' fill='#B32010' />\n</svg>\n\nexport default Logo\n","import React from 'react'\nimport Logo from './logo'\n\nconst FilterIcon = () => <i className='fas fa-filter' />\n\nconst Hero = ({ active, onClick, title, brand }) => <section className='hero is-black'>\n  <div className='container'>\n    <div className='columns is-mobile'>\n      <div className='column is-1'>\n        <button className='filter button has-text-white' onClick={onClick}>\n          <span><FilterIcon /> {!active ? 'FILTER' : 'CLOSE'}</span>\n        </button>\n      </div>\n      <div className='column is-11'>\n        <div className='hero-center'>\n          {\n            brand !== null\n              ? <img className='brand' alt={title} src={brand} />\n              : <Logo />\n          }\n          <h1 className='title'>{title}</h1>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\nexport default Hero\n","require('../cli/parse')\nconst parse = window.parse\nexport default parse\n","import merge from 'merge'\nimport parse from './parse'\n\nexport default async (dispatch, files, suites) => {\n  for (const { file, contents } of files) {\n    try {\n      const parsed = await parse(contents)\n      if (Object.keys(parsed.suites).length === 0) {\n        dispatch({\n          type: 'parse-error',\n          payload: {\n            file,\n            error: 'No suites or tests detected in this file. It could be an unsupported format.'\n          }\n        })\n      }\n      suites = merge.recursive(true, suites, parsed)\n    } catch (err) {\n      dispatch({\n        type: 'parse-error',\n        payload: {\n          file,\n          error: err.message\n        }\n      })\n    }\n  }\n  if (Object.keys(suites.suites).length > 0) {\n    dispatch({\n      type: 'parse-suites',\n      payload: {\n        suites: suites.suites\n      }\n    })\n  } else {\n    dispatch({\n      type: 'parse-error',\n      payload: {\n        file: 'See errors',\n        error: 'No suites or tests detected.'\n      }\n    })\n  }\n}\n","import React from 'react'\n\nconst Toggle = ({\n  active,\n  onIcon,\n  offIcon,\n  onLabel,\n  offLabel,\n  disabled = false,\n  onChange = () => {},\n  className = ''\n}) => {\n  return <button\n    onClick={() => {\n      onChange(!active)\n    }}\n    disabled={disabled}\n    className={`button toggle is-${active ? 'active' : 'inactive'} ${className}`}>\n    <div className='toggle-rail'>\n      <div className='toggle-handle' />\n    </div>\n    {active ? onIcon : offIcon}\n    <span>{active ? onLabel : offLabel}</span>\n  </button>\n}\n\nexport default Toggle\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst Search = ({ label, dispatch }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-properties',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total }) => <div className='options-total'>\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst EyeIcon = () => <span className='icon'>\n  <i className='fas fa-eye' />\n</span>\n\nconst EyeSlashIcon = () => <span className='icon'>\n  <i className='fas fa-eye-slash' />\n</span>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nconst ToggleRow = ({ type, label, propertiesVisible, propertiesExpanded, dispatch }) => <div>\n  <div className='properties-options-toggle-label'>\n    <span>{label}</span>\n  </div>\n  <Toggle\n    className='properties-options-toggle'\n    active={propertiesVisible[type]}\n    onChange={() => {\n      dispatch({\n        type: 'toggle-properties-visbility',\n        payload: {\n          type,\n          active: !propertiesVisible[type]\n        }\n      })\n    }}\n    onLabel='Visible'\n    offLabel='Hidden'\n    onIcon={<EyeIcon />}\n    offIcon={<EyeSlashIcon />} />\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-all-properties',\n        payload: {\n          type,\n          active: !propertiesExpanded[type]\n        }\n      })\n    }}\n    className='properties-options-toggle'\n    active={propertiesExpanded[type]}\n    onLabel='Expanded'\n    offLabel='Contracted'\n    offIcon={<ChevronUpIcon />}\n    onIcon={<ChevronDownIcon />} />\n</div>\n\nconst PropertiesOptions = ({ count = 0, total = 0, active = false, dispatch, propertiesExpanded = { all: true, suites: true, tests: true }, propertiesVisible = { all: true, suites: true, tests: true } }) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Properties' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-properties-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content'>\n      {active\n        ? <div>\n          <ToggleRow type='all' label='All' propertiesVisible={propertiesVisible} propertiesExpanded={propertiesExpanded} dispatch={dispatch} />\n          <ToggleRow type='suites' label='Suites' propertiesVisible={propertiesVisible} propertiesExpanded={propertiesExpanded} dispatch={dispatch} />\n          <ToggleRow type='tests' label='Tests' propertiesVisible={propertiesVisible} propertiesExpanded={propertiesExpanded} dispatch={dispatch} />\n        </div>\n        : null}\n    </div>\n\n  </div>\n}\n\nexport default PropertiesOptions\n","import fuzzy from 'fuzzy'\nimport merge from 'merge'\n\nconst toggleAllProperties = (state, payload, update, toggleType, suiteTesttoggleType) => {\n  update[toggleType] = state[toggleType]\n  update[toggleType][payload.type] = payload.active\n\n  if (payload.type === 'all') {\n    update[toggleType].suites = payload.active\n    update[toggleType].tests = payload.active\n  }\n\n  if (payload.type === 'all' || payload.type === 'suites') {\n    Object.values(update.currentSuites).forEach(suite => {\n      suite.properties[suiteTesttoggleType] = payload.active\n    })\n  }\n\n  if (payload.type === 'all' || payload.type === 'tests') {\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if ('properties' in test) {\n          test.properties[suiteTesttoggleType] = payload.active\n        }\n      })\n    })\n  }\n  return update\n}\n\nexport default (state, { type, payload }) => {\n  let update = {}\n  update.currentSuites = state.currentSuites\n\n  if (type === 'parse-error') {\n    state = merge.recursive(true, {}, state)\n    state.errors = state.errors || []\n    state.errors.push({\n      error: payload.error,\n      file: payload.file\n    })\n    return state\n  }\n\n  if (type === 'parse-suites') {\n    state = merge.recursive(true, {}, state)\n    state.suites = payload.suites\n    state.currentSuites = payload.suites\n    Object.values(state.currentSuites).forEach(suite => {\n      if (Object.keys(suite.tests).length > 0 || Object.keys(suite.properties).length > 0) suite.active = true\n    })\n    return state\n  }\n\n  if (type === 'search-suites') {\n    Object.values(state.suites).forEach(({ name, id }) => {\n      if (fuzzy.test(payload.value.toLowerCase(), name.toLowerCase())) {\n        update.currentSuites[id] = update.currentSuites[id] || merge.recursive(true, {}, state.suites[id])\n        if (!('active' in update.currentSuites[id])) update.currentSuites[id].active = true\n      } else delete update.currentSuites[id]\n    })\n    update.suitesExpanded = Object.values(update.currentSuites).some(suite => suite.active === true)\n  }\n  if (type === 'search-tests') {\n    Object.values(state.suites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (!fuzzy.test(payload.value.toLowerCase(), test.name.toLowerCase()) && !test.messages.some(message => fuzzy.test(payload.value.toLowerCase(), message.toLowerCase()))) {\n          if (update.currentSuites[suite.id]) delete update.currentSuites[suite.id].tests[test.id]\n        } else if (suite.id in update.currentSuites && !(test.id in update.currentSuites[suite.id].tests)) {\n          if (update.currentSuites[suite.id]) {\n            update.currentSuites[suite.id].tests[test.id] = merge.recursive(true, {}, state.suites[suite.id].tests[test.id])\n            update.currentSuites[suite.id].tests[test.id].active = true\n            update.currentSuites[suite.id].tests[test.id].visible = true\n            update.currentSuites[suite.id].tests[test.id].raw = true\n          }\n        }\n      })\n    })\n  }\n  if (type === 'search-properties') {\n    Object.values(state.suites).forEach(suite => {\n      Object.entries(suite.properties)\n        .filter(([key]) => key !== '_visible' && key !== '_active')\n        .forEach(([key, values]) => {\n          values = values || []\n          if (!fuzzy.test(payload.value.toLowerCase(), key.toLowerCase()) && !values.some(value => fuzzy.test(payload.value.toLowerCase(), value.toLowerCase()))) delete update.currentSuites[suite.id].properties[key]\n          else if (suite.id in update.currentSuites && !(key in update.currentSuites[suite.id].properties)) {\n            if (update.currentSuites[suite.id]) {\n              update.currentSuites[suite.id].properties[key] = [].concat(state.suites[suite.id].properties[key])\n              update.currentSuites[suite.id].properties._active = true\n              update.currentSuites[suite.id].properties._visible = true\n              update.propertiesExpanded = false\n            }\n          }\n        })\n    })\n    update.propertiesExpanded = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._active || false\n    })\n    update.propertiesVisible = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._visible || false\n    })\n  }\n\n  if (type === 'toggle-all-suites') {\n    update.suitesExpanded = !state.suitesExpanded\n    Object.values(update.currentSuites).forEach(suite => { suite.active = update.suitesExpanded })\n  }\n  if (type === 'toggle-empty-suites') {\n    update.suitesEmpty = !state.suitesEmpty\n  }\n  if (type === 'toggle-menu') update.menuActive = !state.menuActive\n  if (type === 'toggle-suite-options') update.suiteOptionsActive = !state.suiteOptionsActive\n  if (type === 'toggle-test-options') update.testOptionsActive = !state.testOptionsActive\n  if (type === 'toggle-properties-options') update.propertiesOptionsActive = !state.propertiesOptionsActive\n  if (type === 'toggle-files') update.activeFiles = !state.activeFiles\n  if (type === 'toggle-suite') {\n    update.currentSuites[payload.id].active = payload.active\n    update.suitesExpanded = Object.values(update.currentSuites).some(suite => suite.active === true)\n  }\n\n  if (type === 'toggle-properties') {\n    if (typeof payload.test !== 'undefined' && payload.test !== null) {\n      update.currentSuites[payload.suite].tests[payload.test].properties._active = payload.active\n    } else {\n      update.currentSuites[payload.suite].properties._active = payload.active\n      update.propertiesExpanded = Object.values(update.currentSuites).some((suite) => {\n        return suite.properties._active || false\n      })\n    }\n  }\n\n  if (type === 'toggle-all-properties') {\n    update = toggleAllProperties(state, payload, update, 'propertiesExpanded', '_active')\n  }\n  if (type === 'toggle-properties-visbility') {\n    update = toggleAllProperties(state, payload, update, 'propertiesVisible', '_visible')\n  }\n\n  if (type === 'toggle-test') {\n    update.currentSuites[payload.suite].tests[payload.id].active = payload.active\n  }\n  if (type === 'toggle-test-mode') {\n    update.currentSuites[payload.suite].tests[payload.id].raw = payload.raw\n  }\n  if (type === 'toggle-test-visibility') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].visible = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.visible = payload.active\n        else if (payload.status === test.status) test.visible = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.visible = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.visible = payload.active\n      update.testToggles.failure.visible = payload.active\n      update.testToggles.error.visible = payload.active\n      update.testToggles.skipped.visible = payload.active\n      update.testToggles.unknown.visible = payload.active\n    } else {\n      if (update.testToggles.passed.visible ||\n            update.testToggles.failure.visible ||\n            update.testToggles.error.visible ||\n            update.testToggles.skipped.visible ||\n            update.testToggles.unknown.visible) update.testToggles.all.visible = true\n    }\n  }\n  if (type === 'toggle-test-expanded') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].expanded = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.active = payload.active\n        else if (payload.status === test.status) test.active = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.active = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.expanded = payload.active\n      update.testToggles.failure.expanded = payload.active\n      update.testToggles.error.expanded = payload.active\n      update.testToggles.skipped.expanded = payload.active\n      update.testToggles.unknown.expanded = payload.active\n    } else {\n      if (update.testToggles.passed.expanded ||\n            update.testToggles.failure.expanded ||\n            update.testToggles.error.expanded ||\n            update.testToggles.skipped.expanded ||\n            update.testToggles.unknown.expanded) update.testToggles.all.expanded = true\n    }\n  }\n  if (type === 'toggle-test-raw') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].raw = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.raw = payload.active\n        else if (payload.status === test.status) test.raw = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.raw = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.raw = payload.active\n      update.testToggles.failure.raw = payload.active\n      update.testToggles.error.raw = payload.active\n      update.testToggles.skipped.raw = payload.active\n      update.testToggles.unknown.raw = payload.active\n    } else {\n      if (update.testToggles.passed.raw ||\n            update.testToggles.failure.raw ||\n            update.testToggles.error.raw ||\n            update.testToggles.skipped.raw ||\n            update.testToggles.unknown.raw) update.testToggles.all.raw = true\n    }\n  }\n\n  state = merge.recursive(true, state, update)\n\n  Object.values(state.currentSuites).forEach(suite => {\n    if (!state.suitesEmpty) suite._visible = true\n    else suite._visible = (Object.keys(suite.tests).length > 0 && Object.values(suite.tests).filter(test => test.visible).length > 0) || (suite.properties._visible && Object.keys(suite.properties).filter(prop => prop !== '_visible').length > 0)\n  })\n\n  return state\n}\n","import React from 'react'\nimport RenderIfVisible from 'react-render-if-visible'\nimport Toggle from './toggle'\n\nconst icons = {\n  passed: 'check',\n  failure: 'times',\n  error: 'exclamation',\n  skipped: 'ban',\n  unknown: 'question'\n}\n\nconst statusRank = [\n  'failure',\n  'error',\n  'passed',\n  'skipped',\n  'unknown'\n]\n\nconst Properties = ({ properties, active = true, dispatch, suite, test = null }) => {\n  return <div className={`properties card is-${active ? 'active' : 'inactive'}`}>\n    <button className='card-header' onClick={() => { dispatch({ type: 'toggle-properties', payload: { suite, test, active: !active } }) }}>\n      <p className='card-header-title'>Properties</p>\n      <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span>\n    </button>\n    {active\n      ? <div className='card-content'>\n        <table className='table'>\n          <thead>\n            <tr>\n              <th>Property</th>\n              <th>Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.keys(properties)\n              .filter(key => key !== '_active' && key !== '_visible')\n              .map(key => {\n                return <tr key={key}>\n                  <td>{key}</td>\n                  <td>{properties[key].join(', ')}</td>\n                </tr>\n              })}\n          </tbody>\n        </table>\n      </div>\n      : null}\n  </div>\n}\n\nconst RawContent = ({ messages }) => <div className='raw-content'>\n  {messages.map((message, index) => <pre key={`test-message-${index}`}>{message}</pre>)}\n</div>\n\nconst PrettyContent = ({ messages }) => <div className='pretty-content'>\n  {messages.map((message, index) => <div key={`test-message-${index}`} dangerouslySetInnerHTML={{ __html: message }} />)}\n</div>\n\nconst PrettyIcon = () => <span className='icon'>\n  <i className='fas fa-star' />\n</span>\n\nconst CodeIcon = () => <span className='icon'>\n  <i className='fas fa-code' />\n</span>\n\nconst Test = ({ id, messages, status, time, classname, name, properties = {}, active = true, raw = true, dispatch, suite }) => {\n  const hasProperties = properties._visible & Object.keys(properties).filter(key => key !== '_active' && key !== '_visible').length > 0\n  const hasMessage = messages.length > 0\n  return (\n    <RenderIfVisible>\n      <div className={`test card is-${active ? 'active' : 'inactive'} is-${status} is-${!hasMessage && !hasProperties ? 'empty' : 'populated'}`}>\n        <button className='card-header' onClick={() => { dispatch({ type: 'toggle-test', payload: { suite, id, active: !active } }) }} disabled={!hasMessage && !hasProperties}>\n          <p className='card-header-title'>\n            <span className='icon'>\n              <i className={`fas fa-${icons[status] || icons.unknown}`} aria-hidden='true' />\n            </span>\n            <span>{name}</span>\n            {classname ? <small>classname = {classname}</small> : null}\n            {time ? <small>time = {time}</small> : null}\n          </p>\n          {hasMessage || hasProperties\n            ? <span className='card-header-icon'>\n              <span className='icon'>\n                <i className='fas fa-angle-down' />\n              </span>\n            </span>\n            : null}\n        </button>\n        <div className='content'>\n          {active && (hasMessage || hasProperties)\n            ? <div className='card-content'>\n              {hasProperties ? <Properties properties={properties} suite={suite} test={id} dispatch={dispatch} active={properties._active} /> : null}\n              {\n                hasMessage\n                  ? <>\n                    <Toggle\n                      active={raw}\n                      onLabel='raw'\n                      onIcon={<CodeIcon />}\n                      offIcon={<PrettyIcon />}\n                      offLabel='pretty'\n                      onChange={() => dispatch({ type: 'toggle-test-mode', payload: { suite, id, raw: !raw } })} />\n                    {\n                      raw\n                        ? <RawContent messages={messages} />\n                        : <PrettyContent messages={messages} />\n                    }\n                  </>\n                  : null\n              }\n            </div>\n            : null}\n        </div>\n      </div>\n    </RenderIfVisible>\n  )\n}\n\nconst SuiteCount = ({ count, type }) => count > 0\n  ? <span className='suite-count'>\n    <span className='icon'>\n      <i className={`fas fa-${icons[type]}`} aria-hidden='true' />\n    </span>\n    {count}\n  </span>\n  : null\n\nconst Suite = ({ visible, id, name, active = false, properties = {}, time, tests = {}, dispatch, systemOut = [] }) => {\n  let passed = 0\n  let failure = 0\n  let skipped = 0\n  let error = 0\n  let unknown = 0\n  Object.keys(tests).forEach(key => {\n    const status = tests[key].status\n    if (status === 'passed') passed += 1\n    else if (status === 'failure') failure += 1\n    else if (status === 'skipped') skipped += 1\n    else if (status === 'error') error += 1\n    else unknown += 1\n  })\n\n  const hasTests = Object.keys(tests).length > 0 && Object.values(tests).some(test => test.visible)\n  const hasProperties = '_visible' in properties && properties._visible && Object.keys(properties).filter(key => key !== '_active' && key !== '_visible').length > 0\n  const containsSomething = hasTests || hasProperties\n  return (\n    <RenderIfVisible>\n      <div className={`card suite is-${active ? 'active' : 'inactive'} is-${containsSomething ? 'populated' : 'empty'} is-${visible ? 'visible' : 'hidden'}`}>\n        <button className='card-header' onClick={() => { if (containsSomething) dispatch({ type: 'toggle-suite', payload: { id, active: !active } }) }} disabled={!containsSomething}>\n          <p className='card-header-title'>\n            <span>{name}</span>\n            {time ? <small>time = {time}</small> : null}\n          </p>\n\n          {containsSomething\n            ? <span className='card-header-icon'>\n              <span className='icon'>\n                <i className='fas fa-angle-down' />\n              </span>\n            </span>\n            : null}\n          {containsSomething\n            ? <p className='suite-count-container'>\n              <SuiteCount type='failure' count={failure} />\n              <SuiteCount type='error' count={error} />\n              <SuiteCount type='passed' count={passed} />\n              <SuiteCount type='skipped' count={skipped} />\n              <SuiteCount type='unknown' count={unknown} />\n            </p>\n            : null}\n        </button>\n        {active && containsSomething\n          ? <div className='card-content'>\n            <div className='content'>\n              {systemOut.length > 0 ? systemOut.map((value, index) => <pre key={`${id}-sysout-${index}`}>{value}</pre>) : null}\n              {hasProperties ? <Properties properties={properties} suite={id} dispatch={dispatch} active={properties._active} /> : null}\n              <div>\n                {\n                  Object.entries(tests)\n                    .filter(([key, test]) => test.visible)\n                    .sort((left, right) => {\n                      let leftStatus = statusRank.indexOf(left[1].status)\n                      let rightStatus = statusRank.indexOf(right[1].status)\n\n                      leftStatus = leftStatus === -1 ? statusRank.length : leftStatus\n                      rightStatus = rightStatus === -1 ? statusRank.length : rightStatus\n\n                      if (leftStatus < rightStatus) {\n                        return -2\n                      }\n                      if (leftStatus > rightStatus) return 2\n\n                      const leftName = left[1].name\n                      const rightName = right[1].name\n\n                      if (leftName < rightName) return -1\n                      if (leftName > rightName) return 1\n\n                      return 0\n                    })\n                    .map(([key, test]) => <Test key={key} {...test} suite={id} dispatch={dispatch} />)\n                }\n              </div>\n            </div>\n          </div>\n          : null}\n      </div>\n    </RenderIfVisible>\n  )\n}\n\nexport default Suite\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst Search = ({ label, dispatch }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-suites',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total }) => <div className='options-total'>\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nconst HideIcon = () => <span className='icon'>\n  <i className='far fa-eye-slash' />\n</span>\n\nconst ShowIcon = () => <span className='icon'>\n  <i className='far fa-eye' />\n</span>\n\nconst SuiteOptions = ({ suitesExpanded = true, suitesEmpty = true, count = 0, total = 0, dispatch, active = false }) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Suites' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-suite-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content options-toggles'>\n      {active\n        ? <>\n          <Toggle\n            onChange={() => dispatch({ type: 'toggle-all-suites' })}\n            active={suitesExpanded}\n            onLabel='Expanded'\n            offLabel='Contracted'\n            offIcon={<ChevronUpIcon />}\n            onIcon={<ChevronDownIcon />} />\n          <Toggle\n            onChange={() => dispatch({ type: 'toggle-empty-suites' })}\n            active={suitesEmpty}\n            onLabel='Empty hidden'\n            offLabel='Empty shown'\n            onIcon={<HideIcon />}\n            offIcon={<ShowIcon />} />\n        </>\n        : null}\n    </div>\n\n  </div>\n}\n\nexport default SuiteOptions\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst icons = {\n  passed: 'check',\n  failure: 'times',\n  error: 'exclamation',\n  skipped: 'ban',\n  unknown: 'question'\n}\n\nconst Search = ({ label, dispatch, suite, id }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-tests',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total, icon }) => <div className='options-total'>\n  {icon\n    ? <span className='icon'>\n      <i className={`fas fa-${icons[icon] || icons.unknown}`} aria-hidden='true' />\n    </span>\n    : null}\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst fromTestCounts = (testCounts, status, value) => {\n  const statusCounts = testCounts[status] || {}\n  return statusCounts[value] || 0\n}\n\nconst EyeIcon = () => <>\n  <span className='icon'>\n    <i className='fas fa-eye' />\n  </span>\n</>\n\nconst EyeSlashIcon = () => <>\n  <span className='icon'>\n    <i className='fas fa-eye-slash' />\n  </span>\n</>\n\nconst PrettyIcon = () => <span className='icon'>\n  <i className='fas fa-star' />\n</span>\n\nconst CodeIcon = () => <span className='icon'>\n  <i className='fas fa-code' />\n</span>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nconst StatusTotal = ({ testCounts, status }) => {\n  return fromTestCounts(testCounts, status, 'total') > 0 ? <Total count={fromTestCounts(testCounts, status, 'count')} total={fromTestCounts(testCounts, status, 'total')} icon={status} /> : null\n}\n\nconst ToggleRow = ({ status, label, dispatch, visible = true, expanded = true, raw = true }) => <div className='test-options-toggle-row'>\n  <div className='test-options-toggle-row-label'>\n    {status !== 'all'\n      ? <span className='icon'>\n        <i className={`fas fa-${icons[status] || icons.unknown}`} aria-hidden='true' />\n      </span>\n      : <span className='icon'>\n        <i className='far fa-circle' aria-hidden='true' />\n      </span>}\n    <span>{label}</span>\n  </div>\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-visibility',\n        payload: {\n          status,\n          active: !visible\n        }\n      })\n    }}\n    active={visible}\n    onLabel='Visible'\n    offLabel='Hidden'\n    onIcon={<EyeIcon />}\n    offIcon={<EyeSlashIcon />} />\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-expanded',\n        payload: {\n          status,\n          active: !expanded\n        }\n      })\n    }}\n    active={expanded}\n    onLabel='Expanded'\n    offLabel='Contracted'\n    onIcon={<ChevronDownIcon />}\n    offIcon={<ChevronUpIcon />} />\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-raw',\n        payload: {\n          status,\n          active: !raw\n        }\n      })\n    }}\n    active={raw}\n    onLabel='Raw'\n    offLabel='Pretty'\n    onIcon={<CodeIcon />}\n    offIcon={<PrettyIcon />} />\n\n</div>\n\nconst Options = ({\n  testCounts = {},\n  testToggles = {},\n  count = 0,\n  total = 0,\n  dispatch,\n  active = false\n}) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Tests' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-test-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n          <StatusTotal testCounts={testCounts} status='passed' />\n          <StatusTotal testCounts={testCounts} status='failure' />\n          <StatusTotal testCounts={testCounts} status='error' />\n          <StatusTotal testCounts={testCounts} status='skipped' />\n          <StatusTotal testCounts={testCounts} status='unknown' />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content options-toggles'>\n      {active\n        ? <>\n          <ToggleRow status='all' label='All' dispatch={dispatch} {...testToggles.all} />\n          <ToggleRow status='passed' label='Passed' dispatch={dispatch} {...testToggles.passed} />\n          <ToggleRow status='failure' label='Failure' dispatch={dispatch} {...testToggles.failure} />\n          <ToggleRow status='error' label='Error' dispatch={dispatch} {...testToggles.error} />\n          <ToggleRow status='skipped' label='Skipped' dispatch={dispatch} {...testToggles.skipped} />\n          <ToggleRow status='unknown' label='Unknown' dispatch={dispatch} {...testToggles.unknown} />\n        </>\n        : null}\n    </div>\n\n  </div>\n}\n\nexport default Options\n","import React from 'react'\n\nconst issueUrl = 'https://github.com/lukejpreston/xunit-viewer/issues/new?assignees=&labels=&template=issue.md&title='\n\nconst Error = ({ errors }) => {\n  return (\n    <div className='content mt-5'>\n        <h2 className='subtitle has-text-danger'>Errors found</h2>\n        <p>There was an error parsing your data.</p>\n        <ul>\n            {errors.map(({ file, error }) => (\n                <li key={file}>\n                    <b>{file}</b>\n                    <br />\n                    <p>{error}</p>\n                </li>\n            ))}\n        </ul>\n        <p>\n            If you think this is an issue with the library please raise it here <a href={issueUrl} target='_blank' rel=\"noreferrer\">GitHub Issue</a>\n        </p>\n    </div>\n  )\n}\n\nexport default Error\n","import React from 'react'\n\nconst Loading = () => (\n    <div className='is-flex is-align-items-center is-justify-content-center mt-5'>\n        <button className='button is-loading is-text' />\n        <p>Parsing the files</p>\n    </div>\n)\n\nexport default Loading\n","import React, { useReducer, useEffect } from 'react'\nimport Files from './files'\nimport Hero from './hero'\nimport initialState from './initial-state.json'\nimport parseAll from './parse-all'\nimport PropertiesOptions from './properties-options'\nimport reducer from './reducer'\nimport Suite from './suite'\nimport SuiteOptions from './suite-options'\nimport TestOptions from './test-options'\nimport Error from './error'\nimport Loading from './loading'\n\nconst App = ({ files, title, brand }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  useEffect(() => {\n    if (Object.keys(state.suites).length === 0) parseAll(dispatch, files, {})\n  }, [files])\n\n  let currentPropertiesCount = 0\n  let propertiesTotal = 0\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    currentPropertiesCount += Object.keys(suite.properties).filter(key => key !== '_active' && key !== '_visible').length\n    Object.values(suite.tests).forEach(test => {\n      if (test.properties) currentPropertiesCount += Object.keys(test.properties).filter(key => key !== '_active' && key !== '_visible').length\n    })\n  })\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    propertiesTotal += Object.keys(suite.properties).filter(key => key !== '_active' && key !== '_visible').length\n    Object.values(suite.tests).forEach(test => {\n      if (test.properties) propertiesTotal += Object.keys(test.properties).filter(key => key !== '_active' && key !== '_visible').length\n    })\n  })\n\n  const testCounts = {}\n  let testCount = 0\n  let testTotal = 0\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    Object.entries(suite.tests).forEach(([key, test]) => {\n      const status = test.status || 'unknown'\n      testCounts[status] = testCounts[status] || {}\n      testCounts[status].count = testCounts[status].count || 0\n      testCounts[status].total = testCounts[status].total || 0\n\n      testCounts[status].count += 1\n      testCounts[status].total += 1\n\n      testTotal += 1\n      testCount += 1\n    })\n  })\n\n  const onUpdate = ({ files }) => {\n    parseAll(dispatch, files, {})\n  }\n\n  window.sockets = window.sockets || null\n  useEffect(() => {\n    if (window.sockets === null && 'io' in window) {\n      window.sockets = window.io()\n      window.sockets.on('update', onUpdate)\n    }\n  })\n\n  return <div>\n    <Hero active={state.menuActive} onClick={() => { dispatch({ type: 'toggle-menu' }) }} title={title} brand={brand} />\n    <header className={`is-${!state.menuActive ? 'hidden' : 'shown'}`}>\n      <div className='container'>\n        <SuiteOptions\n          active={state.suiteOptionsActive}\n          suitesExpanded={state.suitesExpanded}\n          suitesEmpty={state.suitesEmpty}\n          dispatch={dispatch}\n          count={Object.keys(state.currentSuites).length}\n          total={Object.keys(state.suites).length}\n        />\n        <TestOptions\n          active={state.testOptionsActive}\n          testToggles={state.testToggles}\n          testCounts={testCounts}\n          count={testCount}\n          total={testTotal}\n          dispatch={dispatch}\n        />\n        <PropertiesOptions\n          propertiesExpanded={state.propertiesExpanded}\n          propertiesVisible={state.propertiesVisible}\n          active={state.propertiesOptionsActive}\n          count={currentPropertiesCount}\n          total={propertiesTotal}\n          dispatch={dispatch}\n        />\n        {process.env.NODE_ENV === 'development'\n          ? <Files files={files} active={state.activeFiles} setActive={() => { dispatch({ type: 'toggle-files' }) }} />\n          : null}\n      </div>\n    </header>\n    <main>\n      <div className='container'>\n        {state.errors && <Error errors={state.errors} />}\n        {state.errors === null && Object.values(state.currentSuites).length === 0 && <Loading />}\n        {Object.values(state.currentSuites).length > 0 && <div>\n          {\n            Object.values(state.currentSuites)\n              .sort((left, right) => {\n                if (left.name < right.name) return -1\n                if (left.name > right.name) return 1\n                return 0\n              })\n              .map(suite => <Suite key={suite.id} {...suite} visible={suite._visible} dispatch={dispatch} />)\n          }\n        </div>\n        }\n      </div>\n    </main>\n  </div>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bulma/css/bulma.css'\nimport '@fortawesome/fontawesome-free/js/all'\n\nimport './app/index.css'\nimport App from './app/app.js'\n\nimport LZUTF8 from 'lzutf8'\n\nlet files = window.files || []\nconst title = window.title || 'Xunit Viewer'\nconst brand = window.brand || null\n\nif (process.env.NODE_ENV === 'development') {\n  files = [{\n    file: '/path/to/file/complete.xml',\n    contents: LZUTF8.compress(`\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<testsuite tests=\"1\" failures=\"1\" time=\"0.0160106\">\n  <testcase name=\"It Is A Failure\" classname=\"Failing\" time=\"0.012011200000000001\">\n    <error>Error message</error>\n    <system-out>Some messgae</system-out>\n    <failure type=\"Failure\">FILENAME:XX</failure>\n  </testcase>\n</testsuite>\n`, { outputEncoding: 'Base64' })\n  }]\n}\n\nfiles = files.map(({ file, contents }) => ({\n  file,\n  contents: LZUTF8.decompress(contents, { inputEncoding: 'Base64' })\n}))\n\nReactDOM.render(<App files={files} title={title} brand={brand} />, document.getElementById('root'))\n","const xml2js = require('xml2js')\n\nconst statusRank = [\n  'failure',\n  'error',\n  'passed',\n  'skipped',\n  'unknown'\n]\n\nconst parseString = (xml) => new Promise((resolve, reject) => {\n  xml2js.parseString(xml, (err, result) => {\n    if (err) reject(new Error(err))\n    else resolve(result)\n  })\n})\n\nconst hashCode = (str) => {\n  let hash = 0\n  if (str.length === 0) return hash\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + char\n    hash = hash & hash\n  }\n  return hash\n}\n\nconst extarctSuiteMeta = (output, testsuite) => {\n  const meta = testsuite.$ || {}\n  const name = meta.name || 'No Name'\n  const id = hashCode(name)\n  const suite = output.suites[id] || {}\n  suite.tests = suite.tests || {}\n  suite.systemOut = suite.systemOut || []\n  suite.properties = suite.properties || {\n    _visible: true\n  }\n\n  Object.entries(meta).forEach(([key, value]) => {\n    if (!['errors', 'failures', 'name', 'skipped', 'tests', 'time'].includes(key)) {\n      suite.properties[key] = suite.properties[key] || []\n      suite.properties[key].push(value)\n    }\n  })\n\n  suite.id = id\n  suite.name = name\n  suite.time = meta.time || 0\n  return suite\n}\n\nconst extractProperties = (suite, properties) => {\n  suite.properties = suite.properties || {}\n  suite.properties._visible = true\n  properties.forEach(property => {\n    if (typeof property === 'string') {\n      property = property.trim()\n      if (property !== '') {\n        suite.properties['No Name'] = suite.properties['No Name'] || []\n        suite.properties['No Name'].push(property)\n      }\n    } else {\n      property.property.forEach(property => {\n        const meta = property.$ || {}\n        const name = meta.name || 'No Name'\n        let value = meta.value || property._\n        if (typeof property === 'string') value = property\n        value = value || ''\n        value = value.trim()\n        suite.properties[name] = suite.properties[name] || []\n        if (value) {\n          suite.properties[name].push(value)\n        }\n      })\n    }\n  })\n}\n\nconst extractTestMessages = (test, messages) => {\n  messages.forEach(body => {\n    const is_ = typeof body._ === 'string'\n    const is$Message = typeof body.$ !== 'undefined' && ('message' in body.$)\n    const is$Type = typeof body.$ !== 'undefined' && ('type' in body.$)\n    const isString = typeof body === 'string'\n\n    if (is_) test.messages.push(body._.trim())\n    if (is$Message) test.messages.push(body.$.message.trim())\n    if (is$Type) test.messages.push(body.$.type.trim())\n    if (isString) test.messages.push(body.trim())\n  })\n}\n\nconst extractTests = (output, suite, testcases) => {\n  suite.tests = suite.tests || {}\n  testcases.forEach(testcase => {\n    const meta = testcase.$ || {}\n    const name = meta.name || 'No Name'\n    const classname = meta.classname || meta.class || ''\n    const time = meta.time || 0\n    const id = hashCode(name + classname)\n\n    const test = suite.tests[id] || { id, name, messages: [], visible: true }\n    test.time = time\n    test.classname = classname\n    if (typeof testcase === 'string') test.messages.push(testcase.trim())\n    if (testcase._) test.messages.push(testcase._.trim())\n    if (meta.message) test.messages.push(testcase.$.message.trim())\n    if (typeof testcase.properties !== 'undefined') {\n      extractProperties(test, testcase.properties)\n      delete testcase.properties\n    }\n    const clonedMeta = Object.assign({}, meta)\n    delete clonedMeta.time\n    delete clonedMeta.name\n    delete clonedMeta.classname\n    delete clonedMeta.class\n    delete clonedMeta.message\n    if (Object.keys(clonedMeta).length > 0) {\n      const property = []\n      for (const [name, value] of Object.entries(clonedMeta)) {\n        property.push({\n          $: {\n            name, value\n          }\n        })\n      }\n      extractProperties(test, [{ property }])\n    }\n\n    if (typeof testcase !== 'string') {\n      const keys = Object.keys(testcase).filter(key => key !== '$' && key !== '_' && key !== 'testcase')\n        .sort((left, right) => {\n          let leftStatus = statusRank.indexOf(left)\n          let rightStatus = statusRank.indexOf(right)\n          leftStatus = leftStatus === -1 ? statusRank.length : leftStatus\n          rightStatus = rightStatus === -1 ? statusRank.length : rightStatus\n\n          if (leftStatus < rightStatus) return -1\n          if (leftStatus > rightStatus) return 1\n          return 0\n        })\n      let status = keys[0]\n      keys.forEach((key) => {\n        if (key) extractTestMessages(test, testcase[key])\n      })\n      if (status === 'system-out') status = 'passed'\n      test.status = status || 'passed'\n    }\n\n    test.messages = test.messages.filter(message => message !== '')\n\n    suite.tests[id] = test\n    if (typeof testcase.testcase !== 'undefined') extractTests(output, suite, testcase.testcase)\n    if (typeof testcase.testsuite !== 'undefined') extractSuite(output, testcase.testsuite)\n  })\n}\n\nconst extractSystemOut = (suite, testsuite) => {\n  suite.systemOut = suite.systemOut || []\n  let systemOut = testsuite['system-out']\n  if (!Array.isArray(systemOut)) systemOut = [systemOut]\n  suite.systemOut = suite.systemOut.concat(systemOut)\n}\n\nconst extractSuite = (output, testsuites) => {\n  if (!Array.isArray(testsuites)) testsuites = [testsuites]\n  testsuites.forEach(testsuite => {\n    const suite = extarctSuiteMeta(output, testsuite)\n    if (typeof testsuite.properties !== 'undefined') extractProperties(suite, testsuite.properties)\n    if (typeof testsuite.testcase !== 'undefined') extractTests(output, suite, testsuite.testcase)\n    if (typeof testsuite['system-out'] !== 'undefined') extractSystemOut(suite, testsuite)\n    output.suites[suite.id] = suite\n  })\n}\n\nconst extract = (output, testsuites) => {\n  if (!Array.isArray(testsuites)) testsuites = [testsuites]\n  testsuites.forEach(testsuite => {\n    extractSuite(output, testsuite)\n    if (typeof testsuite.testsuite !== 'undefined') extract(output, testsuite.testsuite)\n  })\n}\n\nconst parse = async (xml) => {\n  const output = {\n    suites: {}\n  }\n  const result = await parseString(xml)\n  if (result.testsuites) {\n    const testsuites = result.testsuites.testsuite\n    extract(output, testsuites)\n  } else if (result.testsuite) {\n    extract(output, result.testsuite)\n  }\n\n  for (const value of Object.values(output.suites)) {\n    value._visible = Object.keys(value.tests).length > 0 || Object.keys(value.properties).filter(prop => prop !== '_visible').length > 0\n    value.systemOut = value.systemOut.map(value => value.trim())\n  }\n  return output\n}\n\nif (typeof window !== 'undefined') window.parse = parse\nelse {\n  module.exports = parse\n}\n"],"sourceRoot":""}